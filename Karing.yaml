
# 锚点 - 节点订阅的参数 [每小时更新一次订阅节点，每 1 分钟一次健康检查]
NodeParam: &NodeParam {type: http, interval: 3600, health-check: {enable: true, url: 'https://www.gstatic.com/generate_204', interval: 60}}

# 锚点 - 节点订阅
proxy-providers: 

  机场1:
    url: 'https://vless.durl.nyc.mn/zrf'
    <<: *NodeParam
    path: './proxy_providers/机场1.yaml'
    override:
      additional-prefix: "[Zrf] "
      
  机场2:
    url: 'https://ghostcc.cc/ss.cn/cn.ovg'
    <<: *NodeParam
    path: './proxy_providers/机场2.yaml'
    override:
      additional-prefix: "[Ghost] "

  机场3:
    url: 'https://url.happyhour.lol/Happyhour'
    <<: *NodeParam
    path: './proxy_providers/机场3.yaml'
    override:
      additional-prefix: "[Happy] "

  机场4:
    url: 'https://trojan.trevely.us.kg/Trevely?sub'
    <<: *NodeParam
    path: './proxy_providers/机场1.yaml'
    override:
      additional-prefix: "[Trevely] "

  机场5:
    url: 'https://sub.mxlweb.xyz/free'
    <<: *NodeParam
    path: './proxy_providers/机场5.yaml'
    override:
      additional-prefix: "[Mxl] "

  机场6:
    url: 'https://king361.fxxk.dedyn.io/auto'
    <<: *NodeParam
    path: './proxy_providers/机场6.yaml'
    override:
      additional-prefix: "[King] "
      
  机场7:
    url: 'https://ghp.ci/raw.githubusercontent.com/ripaojiedian/freenode/main/clash'
    <<: *NodeParam
    path: './proxy_providers/机场7.yaml'
    override:
      additional-prefix: "[日嫖] "

  机场8:
    url: 'https://sub.tgzdyz2.xyz/sub'
    <<: *NodeParam
    path: './proxy_providers/机场8.yaml'
    override:
      additional-prefix: "[白嫖] "

  机场9:
    url: 'https://ghp.ci/raw.githubusercontent.com/go4sharing/sub/main/sub.yaml'
    <<: *NodeParam
    path: './proxy_providers/机场9.yaml'
    override:
      additional-prefix: "[Go4] "

  TC1:
    url: 'https://alvless.comorg.us.kg/TCorg'
    <<: *NodeParam
    path: './proxy_providers/TC1.yaml'
    override:
      additional-prefix: "[天诚1] "

  TC2:
    url: 'https://altrojan.filegear-sg.me/TCorg'
    <<: *NodeParam
    path: './proxy_providers/TC2.yaml'
    override:
      additional-prefix: "[天诚2] "

  CM1:
    url: 'https://TG.CMLiussss.us.kg/auto'
    <<: *NodeParam
    path: './proxy_providers/机场Cm1.yaml'
    override:
      additional-prefix: "[CM1] "

  CM2:
    url: 'https://VMess.fxxk.dedyn.io/auto'
    <<: *NodeParam
    path: './proxy_providers/机场Cm2.yaml'
    override:
      additional-prefix: "[CM2] "



# 锚点 - 节点筛选组
FilterHK: &FilterHK '^(?=.*((?i)🇭🇰|香港|(\b(HK|Hong)\b)))(?!.*((?i)回国|校园|游戏|🎮|(\b(GAME)\b))).*$'
FilterTW: &FilterTW '^(?=.*((?i)🇹🇼|台湾|(\b(TW|Tai|Taiwan)\b)))(?!.*((?i)回国|校园|游戏|🎮|(\b(GAME)\b))).*$'
FilterJP: &FilterJP '^(?=.*((?i)🇯🇵|日本|川日|东京|大阪|泉日|埼玉|(\b(JP|Japan)\b)))(?!.*((?i)回国|校园|游戏|🎮|(\b(GAME)\b))).*$'
FilterKR: &FilterKR '^(?=.*((?i)🇰🇷|韩国|韓|首尔|(\b(KR|Korea)\b)))(?!.*((?i)回国|校园|游戏|🎮|(\b(GAME)\b))).*$'
FilterSG: &FilterSG '^(?=.*((?i)🇸🇬|新加坡|狮|(\b(SG|Singapore)\b)))(?!.*((?i)回国|校园|游戏|🎮|(\b(GAME)\b))).*$'
FilterUS: &FilterUS '^(?=.*((?i)🇺🇸|美国|波特兰|达拉斯|俄勒冈|凤凰城|费利蒙|硅谷|拉斯维加斯|洛杉矶|圣何塞|圣克拉拉|西雅图|芝加哥|(\b(US|United States)\b)))(?!.*((?i)回国|校园|游戏|🎮|(\b(GAME)\b))).*$'
FilterUK: &FilterUK '^(?=.*((?i)🇬🇧|英国|伦敦|(\b(UK|United Kingdom)\b)))(?!.*((?i)回国|校园|游戏|🎮|(\b(GAME)\b))).*$'
FilterFR: &FilterFR '^(?=.*((?i)🇫🇷|法国|(\b(FR|France)\b)))(?!.*((?i)回国|校园|游戏|🎮|(\b(GAME)\b))).*$'
FilterDE: &FilterDE '^(?=.*((?i)🇩🇪|德国|(\b(DE|Germany)\b)))(?!.*((?i)回国|校园|游戏|🎮|(\b(GAME)\b))).*$'
FilterGame: &FilterGame '^(?=.*((?i)游戏|🎮|(\b(GAME)\b)))(?!.*((?i)回国|校园)).*$'
FilterAll: &FilterAll '^(?=.*(.))(?!.*((?i)群|邀请|返利|循环|官网|客服|网站|网址|获取|订阅|流量|到期|机场|下次|版本|官址|备用|过期|已用|联系|邮箱|工单|贩卖|通知|倒卖|防止|国内|地址|频道|无法|说明|使用|提示|特别|访问|支持|教程|关注|更新|作者|加入|(\b(USE|USED|TOTAL|EXPIRE|EMAIL|Panel|Channel|Author)\b|(\d{4}-\d{2}-\d{2}|\d+G)))).*$'

# 策略组参数锚点
# 锚点 - 时延优选参数 [每 1 分钟一次惰性健康检查，容差 20ms，时延超过 2 秒判定为失败，失败 3 次则自动触发健康检查]
UrlTest: &UrlTest {type: url-test, interval: 60, tolerance: 20, lazy: true, url: 'https://www.gstatic.com/generate_204', disable-udp: false, timeout: 2000, max-failed-times: 3, hidden: true, include-all-providers: true}

# 锚点 - 故障转移参数 [每 1分钟一次惰性健康检查，时延超过 2 秒判定为失败，失败 3 次则自动触发健康检查]
FallBack: &FallBack {type: fallback, interval: 60, lazy: true, url: 'https://www.gstatic.com/generate_204', disable-udp: false, timeout: 2000, max-failed-times: 3, hidden: true, include-all-providers: true}

# 锚点 - 负载均衡参数 [每 1 分钟一次惰性健康检查，时延超过 2 秒判定为失败，失败 3 次则自动触发健康检查]
LoadBalance: &LoadBalance {type: load-balance, interval: 60, lazy: true, url: 'https://www.gstatic.com/generate_204', disable-udp: false, strategy: consistent-hashing, timeout: 2000, max-failed-times: 3, hidden: true, include-all-providers: true}

# 锚点 - 规则参数 [每小时更新一次订阅规则，更新规则时使用直连策略]
RuleProviders: &RuleProviders {type: http, behavior: classical, interval: 3600, format: yaml, proxy: DIRECT}

CsTest: &CslTest {type: select, interval: 300, lazy: true, url: 'https://www.gstatic.com/generate_204'}

# 策略组
proxy-groups: 
  - {name: 🚀选择节点, type: select, proxies: [♻️自动选择, 🌏️全球联网, 🚀机场 一, 🚀机场 二, 🚀机场 三, 🚀机场 四, 🚀机场 五, 🚀机场 六, 🚀机场 七, 🚀机场 八, 🚀机场 九, 🚀机场 十], icon: ''}
  - {name: 🌏️全球联网, type: select, include-all-providers: true, filter: *FilterAll, interval: 300, url: 'https://www.gstatic.com/generate_204', icon: ''}
  - {name: ♻️自动选择, type: url-test, interval: 300, url: 'https://www.gstatic.com/generate_204', include-all-providers: true, filter: *FilterAll, icon: ''}
  - {name: 🚀机场 一, type: select, use: [机场1], icon: ''}
  - {name: 🚀机场 二, type: select, use: [机场2], icon: ''}
  - {name: 🚀机场 三, type: select, use: [机场3], icon: ''}
  - {name: 🚀机场 四, type: select, use: [机场4], icon: ''} 
  - {name: 🚀机场 五, type: select, use: [机场5], icon: ''}
  - {name: 🚀机场 六, type: select, use: [机场6], icon: ''}
  - {name: 🚀机场 七, type: select, use: [机场7, 机场8], icon: ''}
  - {name: 🚀机场 八, type: select, use: [机场9], icon: ''}
  - {name: 🚀机场 九, type: select, use: [TC1, TC2], icon: ''}
  - {name: 🚀机场 十, type: select, use: [CM1, CM2], icon: ''}
  - {name: 🐟漏网之鱼, type: select, proxies: [♻️自动选择, 🌏️全球联网, DIRECT], include-all-providers: true, icon: ''}